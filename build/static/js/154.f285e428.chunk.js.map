{"version":3,"file":"static/js/154.f285e428.chunk.js","mappings":"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","sources":["helpers/image.helper.ts","components/SalesLineChart/chart.config.ts","components/SalesLineChart/SalesLineChart.tsx","components/SalesYearlyChart/SalesYearlyChart.tsx","pages/Sales/Sales.tsx"],"sourcesContent":["export const fileToDataUri = (file: File): Promise<string> =>\n  new Promise((resolve, reject) => {\n    const reader = new FileReader();\n    reader.onload = (event) => {\n      resolve(event.target?.result as string);\n    };\n    reader.onerror = (error) => {\n      reject(error);\n    };\n    reader.readAsDataURL(file);\n  });\n\nexport const getBase64 = (url: string): string => {\n  return \"data:image/png;base64,\" + url;\n};\n","export type ChartDataType = {\n  label: string;\n  data: string | number;\n};\n\nexport const Months = [\n  \"Ocak\",\n  \"Şubat\",\n  \"Mart\",\n  \"Nisan\",\n  \"Mayıs\",\n  \"Haziran\",\n  \"Temmuz\",\n  \"Ağustos\",\n  \"Eylül\",\n  \"Ekim\",\n  \"Kasım\",\n  \"Aralık\",\n];\n","import React, { useEffect, useState } from \"react\";\nimport {\n  Chart,\n  LineElement,\n  BarElement,\n  BarController,\n  LineController,\n  CategoryScale,\n  LinearScale,\n  Decimation,\n  Filler,\n  Legend,\n  Title,\n  Tooltip,\n  SubTitle,\n} from \"chart.js\";\nimport { useAppSelector } from \"../../redux/hooks\";\nimport { ChartDataType, Months } from \"./chart.config\";\nimport { Empty } from \"antd\";\nChart.register(\n  LineElement,\n  BarElement,\n  BarController,\n  LineController,\n  CategoryScale,\n  LinearScale,\n  Decimation,\n  Filler,\n  Legend,\n  Title,\n  Tooltip,\n  SubTitle\n);\nChart.defaults.font.size = 14;\nconst SalesLineChart: React.FC<{ month: number }> = ({ month }) => {\n  const productState = useAppSelector((state) => state.product);\n  const [chartData, setChartData] = useState<ChartDataType[]>([]);\n\n  const createChart = (\n    ctx: CanvasRenderingContext2D,\n    type: \"line\" | \"bar\",\n    labels: string[],\n    datas: any[]\n  ): Chart<\"bar\" | \"line\", number[], string> => {\n    const chart = new Chart(ctx, {\n      type,\n      data: {\n        labels: labels,\n        datasets: [\n          {\n            label: `Günlük Toplam Kazanç (${Months[month]})`,\n            data: datas,\n            backgroundColor: [\n              \"rgba(255, 99, 132, 0.2)\",\n              \"rgba(54, 162, 235, 0.2)\",\n              \"rgba(255, 206, 86, 0.2)\",\n              \"rgba(75, 192, 192, 0.2)\",\n              \"rgba(153, 102, 255, 0.2)\",\n              \"rgba(255, 159, 64, 0.2)\",\n            ],\n            borderColor: [\n              \"rgba(255, 99, 132, 1)\",\n              \"rgba(54, 162, 235, 1)\",\n              \"rgba(255, 206, 86, 1)\",\n              \"rgba(75, 192, 192, 1)\",\n              \"rgba(153, 102, 255, 1)\",\n              \"rgba(255, 159, 64, 1)\",\n            ],\n            borderWidth: 1,\n          },\n        ],\n      },\n      options: {\n        scales: {\n          y: {\n            beginAtZero: true,\n            ticks: {\n              callback: (tickValue, index, ticks) => {\n                return tickValue + \" ₺\";\n              },\n            },\n          },\n        },\n        plugins: {\n          tooltip: {\n            padding: 10,\n            callbacks: {\n              title: (item) => {\n                return \"\";\n              },\n            },\n            external: (ctx) => {\n              ctx.chart.ctx.font = \"16px\";\n              return ctx;\n            },\n          },\n          legend: {\n            labels: {\n              font: {\n                size: 14,\n                weight: \"700\",\n                family: \"sans\",\n              },\n            },\n          },\n        },\n        layout: {\n          padding: {\n            left: 20,\n            top: 30,\n            bottom: 30,\n          },\n        },\n      },\n    });\n    return chart;\n  };\n\n  useEffect(() => {\n    const ctx = (\n      document.getElementById(\"chart\") as HTMLCanvasElement\n    ).getContext(\"2d\");\n    if (!ctx || chartData.length < 1) {\n      return;\n    }\n    const labels: string[] = [];\n    const datas: any[] = [];\n    chartData.forEach((value) => {\n      labels.push(value.label);\n      datas.push(value.data);\n    });\n    const chartStatus = Chart.getChart(\"chart\");\n    if (chartStatus !== undefined) {\n      chartStatus.destroy();\n    }\n    const chartType: \"line\" | \"bar\" = datas.length > 3 ? \"line\" : \"bar\";\n    const chart = createChart(ctx, chartType, labels, datas);\n  }, [chartData]);\n\n  useEffect(() => {\n    const data: ChartDataType[] = [];\n    let kazanc = 0;\n    let gun = \"\";\n    productState.salesData.sales.forEach((sale, index) => {\n      const answerAt = sale.answerAt.toString().split(\"-\")[2].substring(0, 2);\n      if (index === 0) {\n        gun = answerAt;\n        kazanc = sale.totalPrice;\n      } else {\n        if (gun === answerAt) {\n          kazanc += sale.totalPrice;\n        } else {\n          data.push({ label: gun, data: kazanc });\n          gun = answerAt;\n          kazanc = sale.totalPrice;\n        }\n      }\n      // son elemandaysa son günün dataya eklenmesi için\n      if (index === productState.salesData.sales.length - 1) {\n        data.push({ label: gun, data: kazanc });\n      }\n    });\n    setChartData(data);\n  }, [productState.salesData.sales]);\n\n  return (\n    <div className=\"w-full max-w-[750px] \">\n      <canvas id=\"chart\" />\n    </div>\n  );\n};\n\nexport default SalesLineChart;\n","import React, { useEffect } from \"react\";\nimport { SalesYearlyType } from \"../../types/product-service.type\";\nimport {\n  Chart,\n  ArcElement,\n  LineElement,\n  BarElement,\n  PointElement,\n  BarController,\n  BubbleController,\n  DoughnutController,\n  LineController,\n  PieController,\n  PolarAreaController,\n  RadarController,\n  ScatterController,\n  CategoryScale,\n  LinearScale,\n  LogarithmicScale,\n  RadialLinearScale,\n  TimeScale,\n  TimeSeriesScale,\n  Decimation,\n  Filler,\n  Legend,\n  Title,\n  Tooltip,\n  SubTitle,\n} from \"chart.js\";\nimport { Months } from \"../SalesLineChart/chart.config\";\n\nChart.register(\n  ArcElement,\n  LineElement,\n  BarElement,\n  PointElement,\n  BarController,\n  BubbleController,\n  DoughnutController,\n  LineController,\n  PieController,\n  PolarAreaController,\n  RadarController,\n  ScatterController,\n  CategoryScale,\n  LinearScale,\n  LogarithmicScale,\n  RadialLinearScale,\n  TimeScale,\n  TimeSeriesScale,\n  Decimation,\n  Filler,\n  Legend,\n  Title,\n  Tooltip,\n  SubTitle\n);\n\ntype PropsType = {\n  chartDatas: SalesYearlyType[];\n};\n\nconst SalesYearlyChart: React.FC<PropsType> = ({ chartDatas }) => {\n  const createChart = (\n    ctx: CanvasRenderingContext2D,\n    chartType: \"radar\" | \"doughnut\",\n    labels: string[],\n    datas: any[]\n  ): Chart<\"radar\" | \"pie\" | \"doughnut\", number[], string> => {\n    const chart = new Chart(ctx, {\n      type: \"doughnut\",\n      data: {\n        labels: labels,\n        datasets: [\n          {\n            label: \"Aylık Toplam Kazanç\",\n            data: datas,\n            backgroundColor: [\n              \"rgba(255, 99, 132, 0.2)\",\n              \"rgba(54, 162, 235, 0.2)\",\n              \"rgba(255, 206, 86, 0.2)\",\n              \"rgba(75, 192, 192, 0.2)\",\n              \"rgba(153, 102, 255, 0.2)\",\n              \"rgba(255, 159, 64, 0.2)\",\n              \"#EEF1FF\",\n              \"#E80F88\",\n              \"#FAF4B7\",\n              \"#97D2EC\",\n              \"#EBC7E8\",\n              \"#D6CDA4\",\n            ],\n            borderColor: [\n              \"rgba(255, 99, 132, 1)\",\n              \"rgba(54, 162, 235, 1)\",\n              \"rgba(255, 206, 86, 1)\",\n              \"rgba(75, 192, 192, 1)\",\n              \"rgba(153, 102, 255, 1)\",\n              \"rgba(255, 159, 64, 1)\",\n            ],\n          },\n        ],\n      },\n      options: {\n        plugins: {\n          tooltip: {},\n        },\n      },\n    });\n    return chart;\n  };\n\n  useEffect(() => {\n    const ctx = (\n      document.getElementById(\"yearly-chart\") as HTMLCanvasElement\n    ).getContext(\"2d\");\n    if (!ctx || chartDatas.length < 1) return;\n    const labels: string[] = Months;\n    const datas: any[] = [];\n\n    Months.forEach((value, index) => {\n      // chartdatas da aylar zaten index olarak geliyor\n      const chartData = chartDatas.find(\n        (d) => Number(d.month.toString().split(\"-\")[1]) === index\n      );\n      if (chartData) {\n        datas.push(chartData.taking);\n      } else {\n        datas.push(0);\n      }\n    });\n    const charStatus = Chart.getChart(\"yearly-chart\");\n    if (charStatus !== undefined) {\n      charStatus.destroy();\n    }\n    const chartType: \"radar\" | \"doughnut\" =\n      datas.length > 6 ? \"radar\" : \"doughnut\";\n    createChart(ctx, chartType, labels, datas);\n  }, [chartDatas]);\n\n  return (\n    <div className=\"w-full pl-5 max-w-[400px] md:max-w-[700px] lg:max-w-[500px]\">\n      <h3 className=\"text-primary font-bold text-center\">\n        Aylık Toplam Kazanç {new Date().getFullYear()}\n      </h3>\n      <canvas id=\"yearly-chart\" />\n    </div>\n  );\n};\n\nexport default SalesYearlyChart;\n","import { Button, Empty } from \"antd\";\nimport React, { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport SalesLineChart from \"../../components/SalesLineChart/SalesLineChart\";\nimport SalesYearlyChart from \"../../components/SalesYearlyChart/SalesYearlyChart\";\nimport { api_url } from \"../../configs/url.config\";\nimport { gifs, icons } from \"../../constants\";\nimport { pathEnum } from \"../../enums\";\nimport { convertHelper, imageHelper, routeHelper } from \"../../helpers\";\nimport { useAppDispatch, useAppSelector } from \"../../redux/hooks\";\nimport {\n  setSalesData,\n  setSelectedProduct,\n} from \"../../redux/productSlice/productSlice\";\nimport { BestSalesType } from \"../../redux/types/product.type\";\nimport { setIsLoading } from \"../../redux/userSlice/notificationSlice\";\nimport { productService } from \"../../service\";\nimport { SalesYearlyType } from \"../../types/product-service.type\";\n\nconst Sales = () => {\n  const [salesYearlyData, setSalesYearlyData] = useState<SalesYearlyType[]>([]);\n  const [salesYearlyTaking, setSalesYearlyTaking] = useState<number>(0);\n  const [activeDate, setActiveDate] = useState<Date>(new Date());\n  const [bestSaledProduct, setBestSaledProduct] = useState<BestSalesType>();\n\n  const loading = useAppSelector((state) => state.notification.isLoading);\n  const productState = useAppSelector((state) => state.product);\n  const userState = useAppSelector((state) => state.user);\n\n  const dispatch = useAppDispatch();\n  const navigate = useNavigate();\n  useEffect(() => {\n    const getSales = async (date: string) => {\n      dispatch(setIsLoading({ isLoading: true }));\n      try {\n        const requestUrl = routeHelper.addQueryToUrl(\n          `${api_url}/order/@me/sales`,\n          {\n            date,\n          }\n        );\n        const { data } = await productService.getSales(requestUrl);\n        dispatch(setSalesData(data));\n      } catch (error) {\n        console.log(error);\n      } finally {\n        dispatch(setIsLoading({ isLoading: false }));\n      }\n    };\n    getSales(activeDate.toString());\n  }, [activeDate, dispatch]);\n\n  useEffect(() => {\n    const getProduct = async () => {\n      try {\n        const { data } = await productService.getBestSaledProduct();\n        if(!data) return;\n        debugger;\n        const convertedArray = convertHelper.convertBestSalesResponseToProducts(\n          [data]\n        );\n        setBestSaledProduct(convertedArray[0]);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    const getSalesYearly = async () => {\n      const { data } = await productService.getSalesYearly();\n      setSalesYearlyData(data);\n      let takings = 0;\n      data.forEach((val) => {\n        takings += val.taking;\n      });\n      setSalesYearlyTaking(takings);\n    };\n    getSalesYearly();\n    getProduct();\n  }, []);\n\n  const handleRouteEditPage = () => {\n    if (!bestSaledProduct) return;\n    dispatch(setSelectedProduct(bestSaledProduct));\n    routeHelper.navigation(\n      navigate,\n      `${pathEnum.Path.PRODUCT_EDIT_QUERY_ID}/${bestSaledProduct.id}`\n    );\n  };\n\n  if (loading)\n    return (\n      <div className=\"w-full h-full flex justify-center items-center\">\n        <img alt=\"\" src={gifs.ripple} />\n      </div>\n    );\n\n  return (\n    <div>\n      <div className=\"w-full sm:px-5 flex flex-row flex-wrap justify-between items-center\">\n        {productState.salesData.sales.length < 1 ? (\n          <div className=\"w-full flex justify-center items-center\">\n            <Empty\n              description=\"Bu ay satışınız olmamış\"\n              style={{ fontSize: \"16px\", fontWeight: \"700\" }}\n            />\n          </div>\n        ) : (\n          <SalesLineChart month={activeDate.getMonth()} />\n        )}\n        <div className=\"flex flex-col items-start mb-5 ml-5 lg:ml-0\">\n          <button\n            onClick={() =>\n              setActiveDate(\n                new Date(activeDate.getFullYear(), activeDate.getMonth() - 1)\n              )\n            }\n            className=\"flex flex-row items-center mb-4\"\n          >\n            <img src={icons.left_arrow} alt=\"icon\" className=\"w-5 h-5 mr-3\" />\n            <span>Önceki Ay</span>\n          </button>\n          <div className=\"relative  overflow-hidden w-[300px] h-[100px] bg-white rounded-md shadow-md flex flex-row justify-around items-center\">\n            <div className=\"absolute z-0  w-[170px] bg-[#F1CBD7] h-[150px] -left-10 rounded-full \" />\n            <span className=\"text-primary z-10 font-bold  text-base\">\n              {productState.salesData.filterTotalTaking} ₺\n            </span>\n            <span className=\"text-primary font-bold text-base\">\n              Bu Aylık Hasılat\n            </span>\n          </div>\n        </div>\n        <div className=\"flex flex-col items-end  lg:ml-0\">\n          <button\n            onClick={() =>\n              setActiveDate(\n                new Date(activeDate.getFullYear(), activeDate.getMonth() + 1)\n              )\n            }\n            className=\"flex flex-row items-center mb-4\"\n          >\n            <span>Sonraki Ay</span>\n            <img src={icons.right_arrow} alt=\"icon\" className=\"w-5 h-5 ml-3\" />\n          </button>\n          <div className=\"relative mb-5 ml-5 overflow-hidden w-[300px] h-[100px] bg-white rounded-md shadow-md flex flex-row justify-around items-center\">\n            <div className=\"absolute z-0 w-[150px] bg-[#CEE1F1] h-[150px] -left-10 rounded-full \" />\n            <span className=\"text-primary z-10 font-bold  text-base\">\n              {productState.salesData.count}{\" \"}\n            </span>\n            <span className=\"text-primary font-bold text-base\">\n              Bu Aylık Satış\n            </span>\n          </div>\n        </div>\n      </div>\n      <div className=\"w-full sm:px-5 flex flex-row flex-wrap justify-around items-center\">\n        <div className=\"w-[750px]\">\n          {salesYearlyData.length < 1 ? ((\n          <div className=\"w-full flex justify-center items-center\">\n            <Empty\n              description=\"Bu yıl satışınız olmamış\"\n              style={{ fontSize: \"16px\", fontWeight: \"700\" }}\n            />\n          </div>\n        )) : (\n          <SalesYearlyChart chartDatas={salesYearlyData} />\n        ) }\n        </div>\n        <div className=\"relative mt-5 ml-5 lg:ml-0 overflow-hidden w-[300px] h-[100px] bg-white rounded-md shadow-md flex flex-row justify-around items-center\">\n          <div className=\"absolute z-0  w-[170px] bg-[#F1CBD7] h-[150px] -left-10 rounded-full \" />\n          <span className=\"text-primary z-10 font-bold  text-base\">\n            {salesYearlyTaking} ₺\n          </span>\n          <span className=\"text-primary font-bold text-base\">\n            Bu Yıllık Hasılat\n          </span>\n        </div>\n        <div className=\"relative mt-5 ml-5 overflow-hidden w-[300px] h-[100px] bg-white rounded-md shadow-md flex flex-row justify-around items-center\">\n          <div className=\"absolute z-0 w-[180px] bg-[#CEE1F1] h-[150px] -left-10 rounded-full \" />\n          <span className=\"text-primary z-10 font-bold  text-base\">\n            {userState.user.balance} ₺\n          </span>\n          <span className=\"text-primary font-bold text-base\">Bakiyem</span>\n        </div>\n      </div>\n      {bestSaledProduct && (\n        <div className=\"w-full mt-5 px-5 \">\n          <h3 className=\"text-primary font-semibold text-base\">\n            En çok Satılan Ürünüm\n          </h3>\n          <div className=\" w-full flex flex-row items-center flex-wrap\">\n            {bestSaledProduct.images && bestSaledProduct.images.length > 0 ? (\n              <img\n                src={imageHelper.getBase64(bestSaledProduct.images[0])}\n                alt=\"\"\n                className=\"max-h-[100px]\"\n              />\n            ) : (\n              <Button onClick={handleRouteEditPage} type=\"link\">\n                Bu ürüne resim eklemek için tıkla.\n              </Button>\n            )}\n            <div className=\" flex flex-row flex-wrap mt-3 sm:mt-0\">\n              <div className=\"flex flex-col ml-5 items-center mb-3\">\n                <span className=\"whitespace-nowrap border-b border-primary w-[135px] text-center\">\n                  Ürün Adı\n                </span>\n                <span className=\"font-semibold text-primary\">\n                  {bestSaledProduct.name}\n                </span>\n              </div>\n              <div className=\"flex flex-col ml-5 items-center mb-3\">\n                <span className=\"whitespace-nowrap border-b border-primary w-[135px] text-center\">\n                  Ürün Fiyatı\n                </span>\n                <span className=\"font-semibold text-primary\">\n                  {bestSaledProduct.price} ₺\n                </span>\n              </div>\n              <div className=\"flex flex-col ml-5 items-center mb-3\">\n                <span className=\"whitespace-nowrap border-b border-primary w-[135px] text-center\">\n                  Görüntülenme Sayısı\n                </span>\n                <span className=\"font-semibold text-primary\">\n                  {bestSaledProduct.showCount}\n                </span>\n              </div>\n              <div className=\"flex flex-col ml-5 items-center mb-3\">\n                <span className=\"whitespace-nowrap border-b border-primary w-[135px] text-center\">\n                  Ürün Stoğu\n                </span>\n                <span className=\"font-semibold text-primary\">\n                  {bestSaledProduct.stock}\n                </span>\n              </div>\n              <div className=\"flex flex-col ml-5 items-center mb-3\">\n                <span className=\"whitespace-nowrap border-b border-primary w-[135px] text-center\">\n                  Satılan Adet\n                </span>\n                <span className=\"font-semibold text-primary\">\n                  {bestSaledProduct.sum}\n                </span>\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Sales;\n"],"names":["fileToDataUri","file","Promise","resolve","reject","reader","FileReader","onload","event","target","result","onerror","error","readAsDataURL","getBase64","url","Months","Chart","LineElement","BarElement","BarController","LineController","CategoryScale","LinearScale","Decimation","Filler","Legend","Title","Tooltip","SubTitle","month","productState","useAppSelector","state","product","useState","chartData","setChartData","useEffect","ctx","document","getElementById","getContext","length","labels","datas","forEach","value","push","label","data","chartStatus","undefined","destroy","type","chart","datasets","backgroundColor","borderColor","borderWidth","options","scales","y","beginAtZero","ticks","callback","tickValue","index","plugins","tooltip","padding","callbacks","title","item","external","font","legend","size","weight","family","layout","left","top","bottom","createChart","kazanc","gun","salesData","sales","sale","answerAt","toString","split","substring","totalPrice","className","id","ArcElement","PointElement","BubbleController","DoughnutController","PieController","PolarAreaController","RadarController","ScatterController","LogarithmicScale","RadialLinearScale","TimeScale","TimeSeriesScale","chartDatas","find","d","Number","taking","charStatus","chartType","Date","getFullYear","salesYearlyData","setSalesYearlyData","salesYearlyTaking","setSalesYearlyTaking","activeDate","setActiveDate","bestSaledProduct","setBestSaledProduct","loading","notification","isLoading","userState","user","dispatch","useAppDispatch","navigate","useNavigate","getSales","date","setIsLoading","requestUrl","routeHelper","api_url","productService","setSalesData","console","log","getProduct","convertedArray","convertHelper","getSalesYearly","takings","val","alt","src","gifs","description","style","fontSize","fontWeight","getMonth","onClick","icons","filterTotalTaking","count","balance","images","imageHelper","setSelectedProduct","pathEnum","name","price","showCount","stock","sum"],"sourceRoot":""}