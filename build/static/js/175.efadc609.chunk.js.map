{"version":3,"file":"static/js/175.efadc609.chunk.js","mappings":"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","sources":["helpers/image.helper.ts","pages/ProfilePage/profile-page.config.ts","pages/ProfilePage/ProfilePage.tsx","../node_modules/antd/es/_util/responsiveObserve.js"],"sourcesContent":["export const fileToDataUri = (file: File): Promise<string> =>\n  new Promise((resolve, reject) => {\n    const reader = new FileReader();\n    reader.onload = (event) => {\n      resolve(event.target?.result as string);\n    };\n    reader.onerror = (error) => {\n      reject(error);\n    };\n    reader.readAsDataURL(file);\n  });\n\nexport const getBase64 = (url: string): string => {\n  return \"data:image/png;base64,\" + url;\n};\n","import { Role } from \"../../enums/role.enum\";\n\nexport const a = \"\";\n\nexport const formDatas = {\n  names: {\n    firstName: {\n      label: \"İsim\",\n      name: \"firstName\",\n    },\n    lastName: {\n      label: \"Soyisim\",\n      name: \"lastName\",\n    },\n    username:{\n      label:\"Kullanıcı Adı\",\n      name:\"username\"\n    },\n    email: {\n      label: \"Mail Adresi\",\n      name: \"email\",\n    },\n    role: {\n      label: \"Hesap Türü\",\n      name: \"role\",\n    },\n    password: {\n      label: \"Şifre\",\n      name: \"password\",\n    },\n  },\n  rules: {\n    firstName: {\n      message: \"İsim zorunlu!\",\n    },\n    lastName: {\n      message: \"Soyisim zorun!\",\n    },\n    email: {\n      message: \"Mail adresi zorunlu!\",\n      typeMessage: \"Geçersiz mail adresi!\",\n    },\n    password: {\n      message: \"Şifre alanı zorunlu!\",\n    },\n  },\n};\n\nexport const roleValues = [\n  { label: \"Seller\", value: \"seller\" },\n  { label: \"Customer\", value: \"customer\" },\n];\n\nexport type FormValuesType = {\n  firstName: string;\n  lastName: string;\n  email: string;\n  role: Role;\n};\n","import { Button, Form, Input, Select, Tooltip } from \"antd\";\nimport React, { useState } from \"react\";\nimport { icons } from \"../../constants\";\nimport { roleEnum } from \"../../enums\";\nimport { imageHelper } from \"../../helpers\";\nimport { useAppDispatch, useAppSelector } from \"../../redux/hooks\";\nimport { setNotification } from \"../../redux/userSlice/notificationSlice\";\nimport { setUser } from \"../../redux/userSlice/userSlice\";\nimport { userService } from \"../../service\";\nimport { UserUpdateType } from \"../../types/user-service.types\";\nimport { formDatas, FormValuesType, roleValues } from \"./profile-page.config\";\n\nconst ProfilePage = () => {\n  const userState = useAppSelector((state) => state.user);\n\n  const [dataUri, setDataUri] = useState<string | null>(\n    userState.user.profilePicture\n  );\n\n  const dispatch = useAppDispatch();\n\n  const handleChangeProfilePicture = async (selectFile: File) => {\n    // const buffer = new Uint8Array(await selectFile.arrayBuffer());\n    try {\n      const dataUrl = await imageHelper.fileToDataUri(selectFile);\n      setDataUri(dataUrl);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const handleFinish = async (values: FormValuesType) => {\n    const formData: UserUpdateType = {\n      profilePicture: dataUri,\n      email: values.email,\n      firstName: values.firstName,\n      lastName: values.lastName,\n    };\n    try {\n      const { data } = await userService.updateUser(\n        userState.user.id,\n        formData\n      );\n      dispatch(setUser(data));\n      dispatch(\n        setNotification({\n          isNotification: true,\n          description: \"Güncelleme işlemi başarılı\",\n          message: \"Success\",\n          placement: \"top\",\n          status: \"success\",\n        })\n      );\n    } catch (error) {}\n  };\n\n  return (\n    <div className=\"m-3\">\n      <div className=\"flex justify-start items-center\">\n        <div className=\"relative\">\n          <div className=\"w-52 h-52 rounded-full bg-pink flex justify-center items-center\">\n            <img\n              src={dataUri ? dataUri : icons.user}\n              alt=\"user-icon\"\n              className={`${\n                dataUri ? \"w-52 h-52\" : \"\"\n              }  rounded-full object-cover`}\n            />\n          </div>\n          <Tooltip placement=\"bottom\" title=\"change profile picture\">\n            <div className=\"absolute right-5 bottom-2 w-10 h-10  bg-light rounded-full flex justify-center items-center cursor-pointer\">\n              <img\n                src={icons.image}\n                alt=\"add-icon\"\n                className=\"cursor-pointer\"\n              />\n              <input\n                onChange={(e) => {\n                  if (e.target.files)\n                    handleChangeProfilePicture(e.target.files[0]);\n                }}\n                type=\"file\"\n                alt=\"\"\n                title=\"\"\n                accept=\"image/png, image/jpeg\"\n                className=\"absolute opacity-0 w-10 h-10  bg-light rounded-full cursor-pointer\"\n              />\n            </div>\n          </Tooltip>\n        </div>\n        <div className=\"ml-3 sm:ml-6 p-4 border \">\n          <span>\n            {userState.user.firstName\n              .toUpperCase()\n              .concat(\" \", userState.user.lastName.toUpperCase())}\n          </span>\n        </div>\n      </div>\n      <div className=\"w-full flex flex-row flex-wrap space-x-3\">\n        <div className=\"w-full md:w-1/2 mt-4 max-w-lg\">\n          <Form\n            name=\"user\"\n            initialValues={{\n              firstName: userState.user.firstName,\n              lastName: userState.user.lastName,\n              email: userState.user.email,\n              role: roleEnum.RoleText[userState.user.role as never],\n              username: userState.user.username,\n            }}\n            layout=\"vertical\"\n            onFinish={handleFinish}\n            autoComplete=\"off\"\n          >\n            <Form.Item\n              label={formDatas.names.firstName.label}\n              name={formDatas.names.firstName.name}\n              rules={[\n                { required: true, message: formDatas.rules.firstName.message },\n              ]}\n            >\n              <Input />\n            </Form.Item>\n            <Form.Item\n              label={formDatas.names.lastName.label}\n              name={formDatas.names.lastName.name}\n              rules={[\n                { required: true, message: formDatas.rules.lastName.message },\n              ]}\n            >\n              <Input />\n            </Form.Item>\n            <Form.Item\n              label={formDatas.names.email.label}\n              name={formDatas.names.email.name}\n              rules={[\n                { required: true, message: formDatas.rules.email.message },\n                { type: \"email\", message: formDatas.rules.email.typeMessage },\n              ]}\n            >\n              <Input />\n            </Form.Item>\n            \n            <Form.Item\n              label={formDatas.names.username.label}\n              name={formDatas.names.username.name}\n            >\n              <Input disabled />\n            </Form.Item>\n            <Form.Item\n              label={formDatas.names.role.label}\n              name={formDatas.names.role.name}\n            >\n              <Input disabled />\n              {/* <Select defaultValue={userState.user.role}>\n                {roleValues.map((option) => (\n                  <Select.Option key={option.value} value={option.value}>\n                    {option.label}\n                  </Select.Option>\n                ))}\n              </Select> */}\n            </Form.Item>\n            <Form.Item className=\"w-full flex justify-end\">\n              <Button type=\"primary\" htmlType=\"submit\">\n                Save\n              </Button>\n            </Form.Item>\n          </Form>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ProfilePage;\n","import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nexport var responsiveArray = ['xxl', 'xl', 'lg', 'md', 'sm', 'xs'];\nexport var responsiveMap = {\n  xs: '(max-width: 575px)',\n  sm: '(min-width: 576px)',\n  md: '(min-width: 768px)',\n  lg: '(min-width: 992px)',\n  xl: '(min-width: 1200px)',\n  xxl: '(min-width: 1600px)'\n};\nvar subscribers = new Map();\nvar subUid = -1;\nvar screens = {};\nvar responsiveObserve = {\n  matchHandlers: {},\n  dispatch: function dispatch(pointMap) {\n    screens = pointMap;\n    subscribers.forEach(function (func) {\n      return func(screens);\n    });\n    return subscribers.size >= 1;\n  },\n  subscribe: function subscribe(func) {\n    if (!subscribers.size) this.register();\n    subUid += 1;\n    subscribers.set(subUid, func);\n    func(screens);\n    return subUid;\n  },\n  unsubscribe: function unsubscribe(token) {\n    subscribers[\"delete\"](token);\n    if (!subscribers.size) this.unregister();\n  },\n  unregister: function unregister() {\n    var _this = this;\n\n    Object.keys(responsiveMap).forEach(function (screen) {\n      var matchMediaQuery = responsiveMap[screen];\n      var handler = _this.matchHandlers[matchMediaQuery];\n      handler === null || handler === void 0 ? void 0 : handler.mql.removeListener(handler === null || handler === void 0 ? void 0 : handler.listener);\n    });\n    subscribers.clear();\n  },\n  register: function register() {\n    var _this2 = this;\n\n    Object.keys(responsiveMap).forEach(function (screen) {\n      var matchMediaQuery = responsiveMap[screen];\n\n      var listener = function listener(_ref) {\n        var matches = _ref.matches;\n\n        _this2.dispatch(_extends(_extends({}, screens), _defineProperty({}, screen, matches)));\n      };\n\n      var mql = window.matchMedia(matchMediaQuery);\n      mql.addListener(listener);\n      _this2.matchHandlers[matchMediaQuery] = {\n        mql: mql,\n        listener: listener\n      };\n      listener(mql);\n    });\n  }\n};\nexport default responsiveObserve;"],"names":["fileToDataUri","file","Promise","resolve","reject","reader","FileReader","onload","event","target","result","onerror","error","readAsDataURL","getBase64","url","formDatas","firstName","label","name","lastName","username","email","role","password","message","typeMessage","userState","useAppSelector","state","user","useState","profilePicture","dataUri","setDataUri","dispatch","useAppDispatch","handleChangeProfilePicture","selectFile","imageHelper","dataUrl","console","log","handleFinish","values","formData","userService","id","data","setUser","setNotification","isNotification","description","placement","status","className","src","icons","alt","title","onChange","e","files","type","accept","toUpperCase","concat","initialValues","roleEnum","layout","onFinish","autoComplete","rules","required","disabled","htmlType","responsiveArray","responsiveMap","xs","sm","md","lg","xl","xxl","subscribers","Map","subUid","screens","responsiveObserve","matchHandlers","pointMap","forEach","func","size","subscribe","this","register","set","unsubscribe","token","unregister","_this","Object","keys","screen","matchMediaQuery","handler","mql","removeListener","listener","clear","_this2","_ref","matches","_extends","_defineProperty","window","matchMedia","addListener"],"sourceRoot":""}