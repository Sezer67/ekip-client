{"version":3,"file":"static/js/242.a5fa720a.chunk.js","mappings":"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","sources":["components/Products/ProductCard.tsx","helpers/image.helper.ts","components/FilterDrawer/filter-drawer.config.ts","components/FilterDrawer/FilterDrawer.tsx","components/Products/CategoryProducts.tsx","components/Products/HomeProducts/HomeProducts.tsx","helpers/sorter.helper.ts","pages/DashboardPage/DashboardPage.tsx"],"sourcesContent":["import { Button, Rate } from \"antd\";\nimport React, { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { icons } from \"../../constants\";\nimport { pathEnum, roleEnum } from \"../../enums\";\nimport { Role } from \"../../enums/role.enum\";\nimport { imageHelper, routeHelper } from \"../../helpers\";\nimport { useAppDispatch, useAppSelector } from \"../../redux/hooks\";\nimport {\n  addFavorite,\n  removeFavorite,\n  setProductShowCountById,\n  setSelectedProduct,\n} from \"../../redux/productSlice/productSlice\";\nimport { ProductStateType } from \"../../redux/types/product.type\";\nimport { productService } from \"../../service\";\n\ntype PropsType = {\n  product: ProductStateType;\n  editable?: boolean;\n};\n\nconst ProductCard: React.FC<PropsType> = ({ product, editable }) => {\n  const [isFavorite, setIsFavorite] = useState<boolean>(false);\n\n  const userState = useAppSelector((state) => state.user);\n  const productState = useAppSelector((state) => state.product);\n  const imgsrc = product.images && imageHelper.getBase64(product.images[0]);\n\n  const dispatch = useAppDispatch();\n  const navigate = useNavigate();\n\n  const handleEdit = () => {\n    routeHelper.navigation(\n      navigate,\n      `${pathEnum.Path.PRODUCT_EDIT_QUERY_ID}/${product.id}`\n    );\n    dispatch(setSelectedProduct(product));\n  };\n\n  const handleFavorite = async () => {\n    try {\n      if (!isFavorite) {\n        const { data } = await productService.addProduuctToFavorites({\n          productId: product.id,\n        });\n        dispatch(addFavorite(data));\n        setIsFavorite(true);\n      } else {\n        await productService.removeProductToFavorites(product.id);\n        dispatch(removeFavorite({ id: product.id }));\n      }\n    } catch (error) {}\n  };\n  const handleShow = async () => {\n    // product showCount güncellemesi eğer editable ise değişmeyecek\n    // yani satıcı kendi ürününü görüntüleyince görüntülenme sayısı artmayacak\n    if (userState.user.role === roleEnum.Role.Customer) {\n      try {\n        await productService.updateProductById(product.id, { showCount: 1 });\n        dispatch(setProductShowCountById({ id: product.id }));\n      } catch (error) {\n        console.log(error);\n      }\n    }\n    routeHelper.navigation(navigate, `/product/${product.id}`);\n    dispatch(setSelectedProduct(product)); // favorite patlatıyor\n  };\n\n  useEffect(() => {\n    if (userState.user.role !== Role.Customer && !productState.favorites)\n      return;\n    const isFav = productState.favorites.find(\n      (favorite) => favorite.productId.id === product.id\n    );\n    setIsFavorite(!!isFav);\n  }, [product, productState.favorites, userState]);\n\n  return (\n    <div className=\"relative min-w-[17rem]  w-80 shadow-md bg-white p-3 m-3 rounded-md  flex flex-col cursor-pointer hover:shadow-xl transition-shadow duration-300\">\n      <div\n        onClick={editable ? handleEdit : handleFavorite}\n        className={`absolute top-1 right-1 w-8 h-8 bg-white rounded-full flex justify-center items-center ${\n          !editable && userState.user.role !== roleEnum.Role.Customer\n            ? \"hidden\"\n            : \"\"\n        } `}\n      >\n        <img\n          src={\n            editable\n              ? icons.edit\n              : isFavorite\n              ? icons.fill_favorite\n              : icons.empty_favorite\n          }\n          className=\"w-4 h-4\"\n          alt=\"fav\"\n        />\n      </div>\n      <div className=\"flex h-[100px] justify-center mb-1 w-full border-b\">\n        {imgsrc ? (\n          <img\n            src={imgsrc}\n            alt=\"asd\"\n            className=\"w-full object-contain max-h-[100px] \"\n          />\n        ) : (\n          <span className=\"text-red-700 italic \">\n            Ürüne ait bir resim mevcut değil.\n          </span>\n        )}\n      </div>\n      <div onClick={handleShow} className=\"flex flex-col mb-3\">\n        <span className=\"text-orange font-semibold text-lg  cursor-pointer\">\n          {product.name}\n        </span>\n        {product.ownerId ? (\n          <span className=\"text-thirdy text-[.65rem] italic mb-2\">\n            {product.ownerId?.firstName.concat(\" \", product.ownerId?.lastName)}{\" \"}\n            tarafından\n          </span>\n        ) : null}\n        <div className=\"flex flex-row flex-wrap items-center justify-between\">\n          <span className=\"text-secondary font-semibold text-lg\">\n            {product.price} ₺\n          </span>\n          {product.stock < 50 && (\n            <span className=\"text-thirdy text-xs\">\n              Kalan Stok: {product.stock}\n            </span>\n          )}\n        </div>\n        <div className=\"flex flex-row items-center justify-between flex-wrap\">\n          <div className=\"flex flex-row items-center\">\n            <Rate allowHalf disabled defaultValue={product.ratingPoint} />\n            <span className=\"pt-1 ml-2 text-thirdy\">\n              ({product.ratingCount})\n            </span>\n          </div>\n          <Button\n            onClick={handleShow}\n            className=\"hover:!bg-blue-400 hover:!text-light\"\n          >\n            Görüntüle\n          </Button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ProductCard;\n","export const fileToDataUri = (file: File): Promise<string> =>\n  new Promise((resolve, reject) => {\n    const reader = new FileReader();\n    reader.onload = (event) => {\n      resolve(event.target?.result as string);\n    };\n    reader.onerror = (error) => {\n      reject(error);\n    };\n    reader.readAsDataURL(file);\n  });\n\nexport const getBase64 = (url: string): string => {\n  return \"data:image/png;base64,\" + url;\n};\n","import React from \"react\";\nimport { ProductStateType } from \"../../redux/types/product.type\";\n\nexport type PropType = {\n  title: string;\n  visible: boolean;\n  setVisible: React.Dispatch<React.SetStateAction<boolean>>;\n  setFilterProducts: (filterProducts: ProductStateType[]) => void;\n  setActiveTab: (activeTab: string) => void;\n};\n\nexport const styles = {\n  headerStyle: {\n    backgroundColor: \"#1D2639\",\n    color: \"white\",\n  } as React.CSSProperties,\n  bodyStyle: {\n    backgroundColor: \"#f2f2f2\",\n  } as React.CSSProperties,\n};\n\nexport type FormDataType = {\n  name: string;\n  categories: SelectType[];\n  startPrice: number;\n  endPrice: number;\n  isShowCount: boolean;\n};\n\ntype SelectType = {\n  key: string;\n  label: string;\n  value: string;\n};\n","import { Button, Checkbox, Drawer, Form, Input, Select } from \"antd\";\nimport React, { useEffect, useState } from \"react\";\nimport { api_url } from \"../../configs/url.config\";\nimport { icons } from \"../../constants\";\nimport { routeHelper } from \"../../helpers\";\nimport {\n  useAppDispatch,\n  useAppSelector,\n  useAppWindowSize,\n} from \"../../redux/hooks\";\nimport { CategoryType } from \"../../redux/types/category.type\";\nimport { setNotification } from \"../../redux/userSlice/notificationSlice\";\nimport { getProducts } from \"../../service/product.service\";\nimport { QueryProductType } from \"../../types/product-service.type\";\nimport { FormDataType, PropType, styles } from \"./filter-drawer.config\";\n\nconst FilterDrawer: React.FC<PropType> = ({\n  setVisible,\n  visible,\n  title,\n  setFilterProducts,\n  setActiveTab,\n}) => {\n  const [isShowCount, setIsShowCount] = useState<boolean>(false);\n  const [drawerWidth, setDrawerWidth] = useState<number>(500);\n  const size = useAppWindowSize();\n\n  const categoryState = useAppSelector((state) => state.category);\n\n  const dispatch = useAppDispatch();\n\n  const titleNode = (): React.ReactNode => {\n    return <span className=\"text-white text-lg font-semibold\">{title}</span>;\n  };\n  const closeIcon = (): React.ReactNode => {\n    return <img src={icons.cancel} alt=\"icon\" />;\n  };\n\n  const handleFinish = async (values: FormDataType) => {\n    if (Number(values.startPrice) > Number(values.endPrice)) {\n      dispatch(\n        setNotification({\n          isNotification: true,\n          message: \"Hatalı Değer\",\n          description: \"Minimum Fiyat Maximum Fiyattan Yüksek Olamaz.\",\n          placement: \"top\",\n          status: \"error\",\n        })\n      );\n    } else {\n      const data: QueryProductType = {};\n      if (values.categories.length > 0) {\n        let ids: string = \"\";\n        values.categories.forEach((option, index) => {\n          if (index === 0) {\n            ids += option.value;\n          } else {\n            ids = ids + \",\" + option.value;\n          }\n        });\n        data.categories = ids;\n      }\n      if (values.startPrice) data.startPrice = values.startPrice;\n      if (values.endPrice) data.endPrice = values.endPrice;\n      if (values.name) data.name = values.name;\n      if (isShowCount) data.isShowCount = true;\n\n      if (Object.keys(data).length > 0) {\n        // işlem burada\n        const queryUrl = routeHelper.addQueryToUrl(`${api_url}/product`, {\n          categories: data.categories ? data.categories : \"\",\n          startPrice: data.startPrice ? data.startPrice.toString() : \"\",\n          endPrice: data.endPrice ? data.endPrice.toString() : \"\",\n          name: data.name ? data.name : \"\",\n          isShowCount: data.categories ? \"true\" : \"\",\n        });\n        try {\n          const { data: products } = await getProducts(queryUrl);\n          setFilterProducts(products);\n          setActiveTab(\"Filtre\");\n        } catch (error) {\n          console.log(error);\n        }\n      }\n      setVisible(false);\n    }\n  };\n\n  useEffect(() => {\n    if (size.width < 500) {\n      setDrawerWidth(320);\n    }\n  }, [size]);\n\n  return (\n    <Drawer\n      closeIcon={closeIcon()}\n      title={titleNode()}\n      width={drawerWidth}\n      onClose={() => setVisible(false)}\n      visible={visible}\n      headerStyle={styles.headerStyle}\n      bodyStyle={styles.bodyStyle}\n    >\n      <Form layout=\"vertical\" onFinish={handleFinish}>\n        <Form.Item name=\"name\" label=\"İsme Göre Ara\">\n          <Input.Search autoComplete=\"off\" />\n        </Form.Item>\n        <Form.Item name=\"categories\" label=\"Kategori\">\n          <Select labelInValue mode=\"multiple\">\n            {categoryState.initialState.map((option) => (\n              <Select.Option key={option.id}>{option.name}</Select.Option>\n            ))}\n          </Select>\n        </Form.Item>\n        <div className=\"flex flex-row justify-start space-x-4 items-center\">\n          <Form.Item label=\"Min Fiyat\" name=\"startPrice\">\n            <Input type=\"number\" min={0} />\n          </Form.Item>\n          <span className=\"text-2xl\">-</span>\n          <Form.Item label=\"Max Fiyat\" name=\"endPrice\">\n            <Input type=\"number\" min={0} />\n          </Form.Item>\n        </div>\n        <Form.Item name=\"showCount\">\n          <Checkbox onChange={(value) => setIsShowCount(value.target.checked)}>\n            En Çok Tıklananlar\n          </Checkbox>\n        </Form.Item>\n        <Form.Item>\n          <Button htmlType=\"submit\">Bas</Button>\n        </Form.Item>\n      </Form>\n    </Drawer>\n  );\n};\n\nexport default FilterDrawer;\n","import { Empty } from \"antd\";\nimport React, { useEffect } from \"react\";\nimport { icons } from \"../../constants\";\nimport { useAppDispatch, useAppSelector } from \"../../redux/hooks\";\nimport { PropsType } from \"./category-product.config\";\nimport ProductCard from \"./ProductCard\";\n\nconst CategoryProducts: React.FC<PropsType> = ({ products }) => {\n  const productState = useAppSelector((state) => state.product);\n  const dispatch = useAppDispatch();\n  useEffect(() => {\n    // const getProducts = async () => {\n    //   const joinIds = categoryId.join(\",\");\n    //   const queryUrl = routeHelper.addQueryToUrl(`${api_url}/product`, {\n    //     categories: joinIds,\n    //   });\n    //   try {\n    //     const { data } = await productService.getProducts(queryUrl);\n    //     dispatch(setProducts(data));\n    //   } catch (error) {\n    //     console.log(error);\n    //   }\n    // };\n    // getProducts();\n    // seklmelerde 1 er kez gezinip tüm bu componentler renderlanınca her değişimde hepsi tekrar render lanıyor.\n  }, [dispatch]);\n\n  if (products.length < 1) {\n    <div className=\"mt-5 flex justify-center\">\n      <Empty\n        description=\"Ürün Yok\"\n        image={icons.empty}\n        imageStyle={{ width: \"64px\", height: \"64px\" }}\n        style={{ fontSize: \"16px\", fontWeight: \"700\" }}\n      />\n    </div>;\n  }\n\n  return (\n    <div className=\"px-4 flex flex-row flex-wrap\">\n      {products.map((product) => {\n        return <ProductCard product={product} key={product.id} />;\n      })}\n    </div>\n  );\n};\n\nexport default CategoryProducts;\n","import { Empty } from \"antd\";\nimport React, { useEffect, useState } from \"react\";\nimport { icons } from \"../../../constants\";\nimport { useAppWindowSize } from \"../../../redux/hooks\";\nimport { ProductStateType } from \"../../../redux/types/product.type\";\nimport ProductCard from \"../ProductCard\";\n\nconst HomeProducts: React.FC<{ products: ProductStateType[] }> = ({\n  products,\n}) => {\n  const [page, setPage] = useState<number>(0);\n  const [perPage, setPerPage] = useState<number>(6);\n  const [isChangePageNumber, setIsChangePageNumber] = useState<{\n    isNext: boolean;\n    isPrev: boolean;\n  }>({ isNext: false, isPrev: false });\n  const size = useAppWindowSize();\n\n  useEffect(() => {\n    if (size.width < 600) {\n      setPerPage(2);\n    } else if (size.width < 800) {\n      setPerPage(3);\n    } else if (size.width < 1200) {\n      setPerPage(4);\n    } else if (size.width > 1650) {\n      setPerPage(6);\n    } else if (size.width > 1400) {\n      setPerPage(5);\n    }\n  }, [size]);\n\n  useEffect(() => {\n    const isNext = (page + 1) * perPage < products.length;\n    const isPrev = page !== 0;\n    setIsChangePageNumber({ isPrev, isNext });\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [page, perPage, products.length]);\n\n  const handleNextPage = () => {\n    setPage(page + 1);\n  };\n  const handlePrevPage = () => {\n    setPage(page - 1);\n  };\n\n  if (products.length < 1) {\n    return (\n      <div className=\"mt-5 flex justify-center\">\n        <Empty\n          description=\"Ürün Yok\"\n          image={icons.empty}\n          imageStyle={{ width: \"64px\", height: \"64px\" }}\n          style={{ fontSize: \"16px\", fontWeight: \"700\" }}\n        />\n      </div>\n    );\n  }\n\n  // width e göre ayarlanacak\n  return (\n    <div className=\"px-4\">\n      <div className=\" flex flex-row space-x-6  pt-6 pb-3 overflow-x-auto \">\n        {products\n          .slice(perPage * page, perPage * page + perPage)\n          .map((product) => {\n            return <ProductCard product={product} key={product.id} />;\n          })}\n      </div>\n\n      <div className=\"mb-3 mt-1 flex flex-row justify-end space-x-2\">\n        {isChangePageNumber.isPrev && (\n          <button\n            onClick={handlePrevPage}\n            className=\"p-2 border border-primary rounded-sm\"\n          >\n            <img src={icons.left_arrow} alt=\"left-icon\" className=\"w-5 h-5\" />\n          </button>\n        )}\n        <div className=\"p-2 border border-primary\">\n          <span className=\"h-5 px-1\">{page + 1}</span>\n        </div>\n        {isChangePageNumber.isNext && (\n          <button\n            onClick={handleNextPage}\n            className=\"p-2 border border-primary rounded-sm\"\n          >\n            <img src={icons.right_arrow} alt=\"left-icon\" className=\"w-5 h-5\" />\n          </button>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default HomeProducts;\n","import moment from \"moment\";\n\nconst ascendingSortByNumberOrString = <T>(array: T[], key: string): T[] => {\n  const sortedArray = array.slice().sort((a, b) => {\n    let variable1 = (a as any)[key];\n    let variable2 = (b as any)[key];\n    debugger;\n    if (typeof (a as any)[key] === \"string\") {\n      variable1 = (a as any)[key].toLowerCase();\n      variable2 = (b as any)[key].toLowerCase();\n    }\n    if (variable1 > variable2) {\n      return 1;\n    } else if (variable1 < variable2) {\n      return -1;\n    }\n    return 0;\n  });\n  return sortedArray;\n};\n\nconst descendingSortByNumberOrString = <T>(array: T[], key: string): T[] => {\n  return array.slice().sort((a, b) => {\n    let variable1 = (a as any)[key];\n    let variable2 = (b as any)[key];\n    if (typeof (a as any)[key] === \"string\") {\n      variable1 = (a as any)[key].toLowerCase();\n      variable2 = (b as any)[key].toLowerCase();\n    }\n    if (variable1 > variable2) {\n      return -1;\n    } else if (variable1 < variable2) {\n      return 1;\n    }\n    return 0;\n  });\n};\n\nconst descendingSortByDate = <T>(array: T[], key: string): T[] => {\n  return array\n    .slice()\n    .sort(\n      (a, b) =>\n        new Date((b as any)[key] as Date).getTime() -\n        new Date((a as any)[key] as Date).getTime()\n    );\n};\n\nexport const sorter = <T>(\n  key: string,\n  array: T[],\n  sort: \"ASC\" | \"DESC\"\n): T[] => {\n  if (sort === \"ASC\") {\n    debugger;\n    return ascendingSortByNumberOrString(array, key);\n  } else {\n    if (key === \"createdAt\") {\n      return descendingSortByDate(array, key);\n    }\n    return descendingSortByNumberOrString(array, key);\n  }\n};\n","import { Button, Dropdown, Menu, Tabs } from \"antd\";\nimport React, { useEffect, useMemo, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport FilterDrawer from \"../../components/FilterDrawer/FilterDrawer\";\nimport CategoryProducts from \"../../components/Products/CategoryProducts\";\nimport HomeProducts from \"../../components/Products/HomeProducts/HomeProducts\";\nimport { api_url } from \"../../configs/url.config\";\nimport { gifs } from \"../../constants\";\nimport { convertHelper, routeHelper, sorterHelper } from \"../../helpers\";\nimport { setCategory } from \"../../redux/categorySlice/categorySlice\";\nimport { useAppDispatch, useAppSelector } from \"../../redux/hooks\";\nimport {\n  setBestSaleProducts,\n  setNewProducts,\n  setProducts,\n  setTrendProducts,\n} from \"../../redux/productSlice/productSlice\";\nimport {\n  BestSalesType,\n  ProductStateType,\n} from \"../../redux/types/product.type\";\nimport { setIsLoading } from \"../../redux/userSlice/notificationSlice\";\nimport { categoryService, productService } from \"../../service\";\nimport { ProductKeysType } from \"../../types/product-service.type\";\ntype PositionType = \"right\";\n\nconst DashboardPage: React.FC = () => {\n  const [activeTab, setActiveTab] = useState<string>(\"Anasayfa\");\n  const [filterProducts, setFilterProducts] = useState<ProductStateType[]>([]);\n  const [drawerVisible, setDrawerVisible] = useState<boolean>(false);\n\n  const categoryState = useAppSelector((state) => state.category.initialState);\n  const productState = useAppSelector((state) => state.product);\n  const loading = useAppSelector((state) => state.notification.isLoading);\n\n  const dispatch = useAppDispatch();\n  const navigate = useNavigate();\n  const position: PositionType[] = [\"right\"];\n  // useEffect(() => {\n  //   const getTrendProducts = async () => {\n  //     try {\n  //       const { data } = await productService.getTrendProducts();\n  //       dispatch(setTrendProducts(data));\n  //     } catch (error) {\n  //       console.log(error);\n  //     }\n  //   };\n\n  //   const getNewProducts = async () => {\n  //     try {\n  //       const { data } = await productService.getNewProducts();\n  //       dispatch(setNewProducts(data));\n  //     } catch (error) {\n  //       console.log(error);\n  //     }\n  //   };\n\n  //   const bestSalesProducts = async () => {\n  //     try {\n  //       dispatch(setIsLoading({ isLoading: true }));\n  //       const { data } = await productService.getBestSalesProducts();\n  //       const convertedProducts =\n  //         convertHelper.convertBestSalesResponseToProducts(data);\n  //       dispatch(setBestSaleProducts(convertedProducts));\n  //     } catch (error) {\n  //       console.log(error);\n  //     } finally {\n  //       dispatch(setIsLoading({ isLoading: false }));\n  //     }\n  //   };\n  //   getNewProducts();\n  //   getTrendProducts();\n  //   bestSalesProducts();\n  // }, []);\n\n  useEffect(() => {\n    const url = routeHelper.addQueryToUrl(\"\", {\n      tab: activeTab !== \"Anasayfa\" ? activeTab : \"\",\n    });\n    routeHelper.navigation(navigate, url);\n    const categoryId = categoryState.find(({ name }) => name === activeTab)?.id;\n\n    const getProducts = async (id: string) => {\n      // const joinIds = id.join(\",\");\n      const queryUrl = routeHelper.addQueryToUrl(`${api_url}/product`, {\n        categories: id,\n      });\n      try {\n        dispatch(setIsLoading({ isLoading: true }));\n\n        const { data } = await productService.getProducts(queryUrl);\n        dispatch(setProducts(data));\n      } catch (error) {\n        console.log(error);\n      } finally {\n        dispatch(setIsLoading({ isLoading: false }));\n      }\n    };\n    if (categoryId) {\n      getProducts(categoryId);\n    }\n  }, [activeTab]);\n\n  const handleSort = (sort: \"ASC\" | \"DESC\", key: ProductKeysType) => {\n    if (activeTab === \"Filtre\") {\n      const result = sorterHelper.sorter(key, filterProducts, sort);\n      setFilterProducts(result);\n    } else {\n      const result = sorterHelper.sorter(key, productState.products, sort);\n      dispatch(setProducts(result));\n    }\n  };\n\n  const menu = (\n    <Menu\n      selectable\n      items={[\n        {\n          key: 1,\n          label: \"Artan Fiyat\",\n          onClick: () => handleSort(\"ASC\", \"price\"),\n        },\n        {\n          key: 2,\n          label: \"Azalan Fiyat\",\n          onClick: () => handleSort(\"DESC\", \"price\"),\n        },\n        {\n          key: 3,\n          label: \"En Yeniler\",\n          onClick: () => handleSort(\"DESC\",\"createdAt\"),\n        },\n        {\n          key: 4,\n          label: \"En çok Tıklanma\",\n          onClick: () => handleSort(\"DESC\", \"showCount\"),\n        },\n      ]}\n    />\n  );\n\n  const OperationsSlot: Record<PositionType, React.ReactNode> = {\n    right: (\n      <div className=\"flex flex-row space-x-3\">\n        {activeTab !== \"Anasayfa\" && (\n          <Dropdown overlay={menu} trigger={[\"click\"]}>\n            <Button>Sırala</Button>\n          </Dropdown>\n        )}\n        <Button onClick={() => setDrawerVisible(true)}>Ara</Button>\n      </div>\n    ),\n  };\n\n  const slot = useMemo(() => {\n    if (position.length === 0) return null;\n\n    return position.reduce(\n      (acc, direction) => ({ ...acc, [direction]: OperationsSlot[direction] }),\n      {}\n    );\n  }, [activeTab, productState.products]);\n\n  if (loading)\n    return (\n      <div className=\"w-full h-full flex justify-center items-center\">\n        <img alt=\"\" src={gifs.ripple} />\n      </div>\n    );\n\n  return (\n    <div className=\"w-full px-4\">\n      <Tabs\n        tabBarExtraContent={slot}\n        activeKey={activeTab}\n        onChange={(e) => setActiveTab(e)}\n      >\n        <Tabs.TabPane tab=\"Anasayfa\" key=\"Anasayfa\">\n          <div className=\"flex flex-col\">\n            <div className=\"flex flex-row pl-3\">\n              <div className=\"border-b-2 border-primary w-6 \" />\n              <span className=\"border-2 border-b-0 border-primary px-3 pb-1  mb-0 w-auto rounded-t-md pt-2 font-semibold text-primary\">\n                Trendler\n              </span>\n              <div className=\"border-b-2 border-primary  w-full \" />\n            </div>\n            <HomeProducts\n              products={productState.globalDatas.trends}\n              key=\"trend\"\n            />\n          </div>\n          <div className=\"flex flex-col\">\n            <div className=\"flex flex-row pl-3  \">\n              <div className=\"border-b-2 border-orange w-6 \" />\n              <span className=\"border-2 border-b-0 whitespace-nowrap border-orange px-3 pb-1  mb-0 w-auto rounded-t-md pt-2 font-semibold text-primary\">\n                En Yeniler\n              </span>\n              <div className=\"border-b-2  border-orange  w-full \" />\n            </div>\n            <HomeProducts products={productState.globalDatas.new} key=\"new\" />\n          </div>\n          <div className=\"flex flex-col\">\n            <div className=\"flex flex-row pl-3  shadow-secondary\">\n              <div className=\"border-b-2 border-secondary w-6 \" />\n              <span className=\"border-2 border-b-0 whitespace-nowrap border-secondary px-3 pb-1  mb-0 w-auto rounded-t-md pt-2 font-semibold text-primary\">\n                Çok Satanlar\n              </span>\n              <div className=\"border-b-2  border-secondary  w-full \" />\n            </div>\n            <HomeProducts\n              products={productState.globalDatas.bestSales}\n              key=\"new\"\n            />\n          </div>\n        </Tabs.TabPane>\n\n        {categoryState.map((category) => {\n          return (\n            <Tabs.TabPane tab={category.name} key={category.name}>\n              <CategoryProducts\n                products={productState.products}\n                key={category.id}\n              />\n            </Tabs.TabPane>\n          );\n        })}\n        {filterProducts.length > 0 && (\n          <Tabs.TabPane tab=\"Filtre\" key=\"Filtre\">\n            <CategoryProducts key=\"Filter\" products={filterProducts} />\n          </Tabs.TabPane>\n        )}\n      </Tabs>\n      <FilterDrawer\n        title=\"Ürün Filtreleme\"\n        setVisible={setDrawerVisible}\n        visible={drawerVisible}\n        setFilterProducts={setFilterProducts}\n        setActiveTab={setActiveTab}\n      />\n    </div>\n  );\n};\n\nexport default DashboardPage;\n"],"names":["product","editable","useState","isFavorite","setIsFavorite","userState","useAppSelector","state","user","productState","imgsrc","images","imageHelper","dispatch","useAppDispatch","navigate","useNavigate","handleFavorite","productService","productId","id","data","addFavorite","removeFavorite","handleShow","role","roleEnum","showCount","setProductShowCountById","console","log","routeHelper","setSelectedProduct","useEffect","Role","favorites","isFav","find","favorite","className","onClick","pathEnum","src","icons","alt","name","ownerId","firstName","concat","lastName","price","stock","allowHalf","disabled","defaultValue","ratingPoint","ratingCount","fileToDataUri","file","Promise","resolve","reject","reader","FileReader","onload","event","target","result","onerror","error","readAsDataURL","getBase64","url","styles","headerStyle","backgroundColor","color","bodyStyle","setVisible","visible","title","setFilterProducts","setActiveTab","isShowCount","setIsShowCount","drawerWidth","setDrawerWidth","size","useAppWindowSize","categoryState","category","handleFinish","values","Number","startPrice","endPrice","setNotification","isNotification","message","description","placement","status","categories","length","ids","forEach","option","index","value","Object","keys","queryUrl","api_url","toString","getProducts","products","width","closeIcon","onClose","layout","onFinish","label","autoComplete","labelInValue","mode","initialState","map","type","min","onChange","checked","htmlType","ProductCard","page","setPage","perPage","setPerPage","isNext","isPrev","isChangePageNumber","setIsChangePageNumber","image","imageStyle","height","style","fontSize","fontWeight","slice","sorter","key","array","sort","a","b","variable1","variable2","toLowerCase","ascendingSortByNumberOrString","Date","getTime","descendingSortByDate","descendingSortByNumberOrString","activeTab","filterProducts","drawerVisible","setDrawerVisible","loading","notification","isLoading","position","tab","categoryId","setIsLoading","setProducts","handleSort","sorterHelper","menu","selectable","items","OperationsSlot","right","overlay","trigger","slot","useMemo","reduce","acc","direction","gifs","tabBarExtraContent","activeKey","e","globalDatas","trends","new","bestSales"],"sourceRoot":""}