{"version":3,"file":"static/js/629.b0ccb42a.chunk.js","mappings":"wJAAYA,E,qGAAZ,SAAYA,GAAAA,EAAAA,SAAAA,WAAAA,EAAAA,MAAAA,QAAAA,EAAAA,SAAAA,UAAAA,CAAZ,CAAYA,IAAAA,EAAAA,CAAAA,I,kFCgHZ,EAlGkB,WAChB,IAAMC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MAEXC,GAAYC,EAAAA,EAAAA,KAAe,SAACC,GAAD,OAAWA,EAAMC,IAAjB,KACjCC,EAAAA,EAAAA,YAAU,WACJJ,EAAUG,KAAKE,OAAOT,EAASU,EAAAA,GAAAA,EAAAA,KACpC,GAAE,CAACV,EAAUI,IAEd,IAIMO,EAAc,yCAAG,WAAOC,GAAP,yFACrB,UAAIA,EAAOC,gBAAX,OAAI,EAAiBC,SAAS,OAC5BF,EAAOG,MAAQH,EAAOC,gBACfD,EAAOC,UAHK,mBAMIG,EAAAA,EAAAA,OAAMJ,GANV,gBAMXK,EANW,EAMXA,KACRf,EAASgB,EAAAA,GAAkBD,IACvBA,EAAKR,SACPU,EAAAA,EAAAA,GAAYF,EAAKR,OACjBW,EAAAA,EAA8B,QAASH,EAAKR,QAE1CQ,EAAKI,OAASC,EAAAA,EAAAA,MAChBC,EAAAA,EAAuBvB,EAAUU,EAAAA,GAAAA,EAAAA,OAEjCV,EAASU,EAAAA,GAAAA,EAAAA,MAEXR,GACEsB,EAAAA,EAAAA,IAAgB,CACdC,QAAS,mBACTC,YAAa,GACbC,gBAAgB,EAChBC,UAAW,MACXC,OAAQ,aAvBO,kDA2BnB3B,GACEsB,EAAAA,EAAAA,IAAgB,CACdC,QAAS,qBACTC,YAAW,UAAE,KAAMI,gBAAR,aAAE,EAAgBb,KAAKS,YAClCC,gBAAgB,EAChBC,UAAW,MACXC,OAAQ,WAjCO,0DAAH,sDAuCpB,OACE,iBAAKE,UAAU,6DAAf,WACE,gBAAKA,UAAU,2GAAf,UACE,UAAC,IAAD,CACEC,OAAO,WACPD,UAAU,4DACVE,SAAUtB,EAHZ,WAKE,SAAC,SAAD,CACEoB,UAAU,aACVG,MAAM,6BAER,SAAC,SAAD,CACEC,KAAMpC,EAAec,SACrBqB,MAAM,uCACNH,UAAU,SAHZ,UAKE,SAAC,IAAD,OAEF,SAAC,SAAD,CACEI,KAAMpC,EAAeqC,SACrBF,MAAM,aACNH,UAAU,SAHZ,UAKE,SAAC,aAAD,OAEF,UAAC,SAAD,CAAWA,UAAU,0BAArB,WACE,SAAC,IAAD,CAAQM,KAAK,OAAOC,QAtEL,WACvBtC,EAASU,EAAAA,GAAAA,EAAAA,SACV,EAoES,6CAGA,SAAC,IAAD,CAAQ2B,KAAK,UAAUE,SAAS,SAAhC,qCAON,gBACER,UAAU,iCACVS,IAAKC,EAAAA,GAAAA,EACLC,IAAI,OAIX,C,gFC5GUC,EAAkB,CAAC,MAAO,KAAM,KAAM,KAAM,KAAM,MAClDC,EAAgB,CACzBC,GAAI,qBACJC,GAAI,qBACJC,GAAI,qBACJC,GAAI,qBACJC,GAAI,sBACJC,IAAK,uBAEHC,EAAc,IAAIC,IAClBC,GAAU,EACVC,EAAU,CAAC,EACXC,EAAoB,CACtBC,cAAe,CAAC,EAChBtD,SAAU,SAAkBuD,GAK1B,OAJAH,EAAUG,EACVN,EAAYO,SAAQ,SAAUC,GAC5B,OAAOA,EAAKL,EACb,IACMH,EAAYS,MAAQ,CAC5B,EACDC,UAAW,SAAmBF,GAK5B,OAJKR,EAAYS,MAAME,KAAKC,WAC5BV,GAAU,EACVF,EAAYa,IAAIX,EAAQM,GACxBA,EAAKL,GACED,CACR,EACDY,YAAa,SAAqBxD,GAChC0C,EAAW,OAAW1C,GACjB0C,EAAYS,MAAME,KAAKI,YAC7B,EACDA,WAAY,WACV,IAAIC,EAAQL,KAEZM,OAAOC,KAAKzB,GAAec,SAAQ,SAAUY,GAC3C,IAAIC,EAAkB3B,EAAc0B,GAChCE,EAAUL,EAAMX,cAAce,GACtB,OAAZC,QAAgC,IAAZA,GAA8BA,EAAQC,IAAIC,eAA2B,OAAZF,QAAgC,IAAZA,OAAqB,EAASA,EAAQG,SACxI,IACDxB,EAAYyB,OACb,EACDb,SAAU,WACR,IAAIc,EAASf,KAEbM,OAAOC,KAAKzB,GAAec,SAAQ,SAAUY,GAC3C,IAAIC,EAAkB3B,EAAc0B,GAEhCK,EAAW,SAAkBG,GAC/B,IAAIC,EAAUD,EAAKC,QAEnBF,EAAO3E,UAAS8E,EAAAA,EAAAA,IAASA,EAAAA,EAAAA,GAAS,CAAC,EAAG1B,IAAU2B,EAAAA,EAAAA,GAAgB,CAAC,EAAGX,EAAQS,IAC7E,EAEGN,EAAMS,OAAOC,WAAWZ,GAC5BE,EAAIW,YAAYT,GAChBE,EAAOrB,cAAce,GAAmB,CACtCE,IAAKA,EACLE,SAAUA,GAEZA,EAASF,EACV,GACF,GAEH,M","sources":["pages/LoginPage/login-page.config.ts","pages/LoginPage/LoginPage.tsx","../node_modules/antd/es/_util/responsiveObserve.js"],"sourcesContent":["export enum FormValuesEnum {\n    username = \"username\",\n    email = \"email\",\n    password = \"password\"\n}","import React, { useEffect } from \"react\";\nimport { Button, Form, Input } from \"antd\";\nimport { useNavigate } from \"react-router-dom\";\nimport { gifs } from \"../../constants\";\nimport { useAppDispatch, useAppSelector } from \"../../redux/hooks\";\nimport { login } from \"../../service/user.sevice\";\nimport { UserLoginType } from \"../../types/user-service.types\";\nimport { FormValuesEnum } from \"./login-page.config\";\nimport * as userSlice from \"../../redux/userSlice/userSlice\";\nimport { setApiToken } from \"../../axios.util\";\nimport { routeHelper, storageHelper } from \"../../helpers\";\nimport { pathEnum } from \"../../enums\";\nimport { setNotification } from \"../../redux/userSlice/notificationSlice\";\nimport { Role } from \"../../enums/role.enum\";\nconst LoginPage = () => {\n  const navigate = useNavigate();\n  const dispatch = useAppDispatch();\n\n  const userState = useAppSelector((state) => state.user);\n  useEffect(() => {\n    if (userState.user.token) navigate(pathEnum.Path.HOME);\n  }, [navigate, userState]);\n\n  const handleNotAccount = () => {\n    navigate(pathEnum.Path.REGISTER);\n  };\n\n  const handleOnFinish = async (values: UserLoginType) => {\n    if (values.username?.includes(\"@\")) {\n      values.email = values.username;\n      delete values.username;\n    }\n    try {\n      const { data } = await login(values);\n      dispatch(userSlice.setUser(data));\n      if (data.token) {\n        setApiToken(data.token);\n        storageHelper.setKeyWithValue(\"token\", data.token);\n      }\n      if (data.role === Role.Admin) {\n        routeHelper.navigation(navigate, pathEnum.Path.USERS);\n      } else {\n        navigate(pathEnum.Path.HOME);\n      }\n      dispatch(\n        setNotification({\n          message: \"Hoşgeldiniz\",\n          description: \"\",\n          isNotification: true,\n          placement: \"top\",\n          status: \"success\",\n        })\n      );\n    } catch (error: any) {\n      dispatch(\n        setNotification({\n          message: \"Dur bakalım !\",\n          description: error.response?.data.description,\n          isNotification: true,\n          placement: \"top\",\n          status: \"error\",\n        })\n      );\n    }\n  };\n\n  return (\n    <div className=\"w-full h-[100vh] flex flex-row justify-around items-center\">\n      <div className=\"w-full shadow-shadow-right px-4 lg:px-0 lg:w-1/2 flex justify-center h-full lg:border-r border-r-primary\">\n        <Form\n          layout=\"vertical\"\n          className=\"w-full lg:w-1/2 flex flex-col justify-center items-center\"\n          onFinish={handleOnFinish}\n        >\n          <Form.Item\n            className=\" lg:hidden\"\n            label=\"Ekip'e Hoşgeldiniz\"\n          ></Form.Item>\n          <Form.Item\n            name={FormValuesEnum.username}\n            label=\"Kullanıcı Adı | Email\"\n            className=\"w-full\"\n          >\n            <Input />\n          </Form.Item>\n          <Form.Item\n            name={FormValuesEnum.password}\n            label=\"Şifre\"\n            className=\"w-full\"\n          >\n            <Input.Password />\n          </Form.Item>\n          <Form.Item className=\"w-full flex justify-end\">\n            <Button type=\"link\" onClick={handleNotAccount}>\n              Henüz bir hesabım yok.\n            </Button>\n            <Button type=\"primary\" htmlType=\"submit\">\n              Giriş Yap\n            </Button>\n          </Form.Item>\n        </Form>\n      </div>\n\n      <img\n        className=\"hidden lg:block lg:w-1/2 mx-4 \"\n        src={gifs.logogif}\n        alt=\"\"\n      />\n    </div>\n  );\n};\n\nexport default LoginPage;\n","import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nexport var responsiveArray = ['xxl', 'xl', 'lg', 'md', 'sm', 'xs'];\nexport var responsiveMap = {\n  xs: '(max-width: 575px)',\n  sm: '(min-width: 576px)',\n  md: '(min-width: 768px)',\n  lg: '(min-width: 992px)',\n  xl: '(min-width: 1200px)',\n  xxl: '(min-width: 1600px)'\n};\nvar subscribers = new Map();\nvar subUid = -1;\nvar screens = {};\nvar responsiveObserve = {\n  matchHandlers: {},\n  dispatch: function dispatch(pointMap) {\n    screens = pointMap;\n    subscribers.forEach(function (func) {\n      return func(screens);\n    });\n    return subscribers.size >= 1;\n  },\n  subscribe: function subscribe(func) {\n    if (!subscribers.size) this.register();\n    subUid += 1;\n    subscribers.set(subUid, func);\n    func(screens);\n    return subUid;\n  },\n  unsubscribe: function unsubscribe(token) {\n    subscribers[\"delete\"](token);\n    if (!subscribers.size) this.unregister();\n  },\n  unregister: function unregister() {\n    var _this = this;\n\n    Object.keys(responsiveMap).forEach(function (screen) {\n      var matchMediaQuery = responsiveMap[screen];\n      var handler = _this.matchHandlers[matchMediaQuery];\n      handler === null || handler === void 0 ? void 0 : handler.mql.removeListener(handler === null || handler === void 0 ? void 0 : handler.listener);\n    });\n    subscribers.clear();\n  },\n  register: function register() {\n    var _this2 = this;\n\n    Object.keys(responsiveMap).forEach(function (screen) {\n      var matchMediaQuery = responsiveMap[screen];\n\n      var listener = function listener(_ref) {\n        var matches = _ref.matches;\n\n        _this2.dispatch(_extends(_extends({}, screens), _defineProperty({}, screen, matches)));\n      };\n\n      var mql = window.matchMedia(matchMediaQuery);\n      mql.addListener(listener);\n      _this2.matchHandlers[matchMediaQuery] = {\n        mql: mql,\n        listener: listener\n      };\n      listener(mql);\n    });\n  }\n};\nexport default responsiveObserve;"],"names":["FormValuesEnum","navigate","useNavigate","dispatch","useAppDispatch","userState","useAppSelector","state","user","useEffect","token","pathEnum","handleOnFinish","values","username","includes","email","login","data","userSlice","setApiToken","storageHelper","role","Role","routeHelper","setNotification","message","description","isNotification","placement","status","response","className","layout","onFinish","label","name","password","type","onClick","htmlType","src","gifs","alt","responsiveArray","responsiveMap","xs","sm","md","lg","xl","xxl","subscribers","Map","subUid","screens","responsiveObserve","matchHandlers","pointMap","forEach","func","size","subscribe","this","register","set","unsubscribe","unregister","_this","Object","keys","screen","matchMediaQuery","handler","mql","removeListener","listener","clear","_this2","_ref","matches","_extends","_defineProperty","window","matchMedia","addListener"],"sourceRoot":""}